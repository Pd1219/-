  <     Array（数组）   >
 《   数 组 属 性  》：

constructor  返回创建数组对象的原型函数。
length     设置或返回数组元素的个数。
prototype  向数组对象添加属性或方法。

 《    方     法     》：

toString() 把数组转换为字符串
indexOf()  搜索数组中的元素，并返回它所在的位置。
isArray()  判断对象是否为数组。
           
concat()   方法用于连接两个或多个数组。	
pop()      删除数组的最后一个元素并返回删除后的数组。
shift()    把数组的第一个元素从其中删除并返回删除后的数组
splice()   从数组中添加或删除元素。

     移除数组的第三个元素，并在数组第三个位置添加新元素:
     var fruits = ["Banana", "Orange", "Apple", "Mango"];
     fruits.splice(2,1,"Lemon","Kiwi");
     输出结果：
     Banana,Orange,Lemon,Kiwi,Mango
  

unshift()  可向数组的开头添加一个或更多元素，并返回新的长度
push()     向数组添加一个或更多元素，并返回新的长度。
fill()     方法用于将一个固定值替换数组的元素。

reverse()  反转数组的元素顺序
sort()     对数组的元素进行排序。

reduce()   接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。
reduceRight() 将数组元素计算为一个值（从右到左）。
filter()   检测数值元素，并返回符合条件所有元素的数组。
map()      方法返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值。
every()    方法用于检测数组所有元素是否都符合指定条件（通过函数提供）。如果所有元素都满足条件，则返回 true。
some()     方法用于检测数组中的元素是否满足指定条件（函数提供）。如果有一个元素满足条件，则表达式返回true。
  

         <  String (字符串) >


    《  字  符  串  属 性  》：

constructor  对创建该对象的函数的引用。
length    	字符串的长度
prototype    向对象添加属性或方法。

     《    方     法     》：
 
toString()    返回一个字符串。
valueOf()     返回某个字符串对象的原始值。
toLowerCase() 把字符串转换为小写。
toUpperCase()	 把字符串转换为大写。
trim()        去除字符串两边的空白
concat()      连接两个或更多字符串，并返回新的字符串。
indexOf()     返回某个指定的字符串值在字符串中首次出现的位置。如果没有找到匹配的字符串则返回 -1。
includes()    判断字符串是否包含指定的子字符串. 找到返回 true，否则返回 false
match()       可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配。
replace()     在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。
search()      检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串。返回第一个的下标位置。没有就返回-1
split()       把一个字符串分割成字符串数组
startsWith()  检测字符串是否以指定的子字符串开始。如果是返回 true，否则 false。
substring()   提取字符串中两个指定的索引号之间的字符。
   var str="Hello world!"
   document.write(str.substring(3,7));//lo w
substr()      在字符串中抽取从 开始 下标开始的指定数目的字符。
   var str="Hello world!";
   var n=str.substr(2,3)  //llo
slice()       提取字符串的某个部分，并以新的字符串返回被提取的部分
    var str="Hello world!";
    var n=str.slice(1,5);   //ello


